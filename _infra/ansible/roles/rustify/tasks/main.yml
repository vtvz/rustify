---
- name: Create Directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0644"
  loop:
    - "{{ rustify_deploy_path }}"
    - "{{ rustify_deploy_path }}/var"

- name: Generate Env for rustify
  ansible.builtin.set_fact:
    rustify_env_content: |-
      "DATABASE_URL": "postgresql://{{ rustify_db_username }}:{{ rustify_db_password }}@{{ rustify_db_host }}:{{ rustify_db_port }}/{{ rustify_db_database }}"
      "CENSOR_BLACKLIST": "{{ rustify_censor_blacklist | join(',') }}"
      "CENSOR_WHITELIST": "{{ rustify_censor_whitelist | join(',') }}"
      "GENIUS_SERVICE_URL": "http://lyrics_provider:8090/genius"
      "AZLYRICS_SERVICE_URL": "http://lyrics_provider:8090/azlyrics"
      "REDIS_URL": "redis://redis:6379/"
      {% for (key, value) in rustify_env.items() -%}
         {{ key | to_json }}: {{ value | to_json }}
      {% endfor %}

- name: Docker Compose
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ rustify_deploy_path }}/docker-compose.yml"
    mode: "0644"

- name: Log into private registry and force re-authorization
  community.docker.docker_login:
    registry_url: "{{ rustify_docker_registry_url }}"
    username: "{{ rustify_docker_registry_username }}"
    password: "{{ rustify_docker_registry_password }}"
    reauthorize: true

- name: Docker Compose Up
  community.docker.docker_compose_v2:
    project_src: "{{ rustify_deploy_path }}"
    build: always
    state: present

- name: Configure Backups
  block:
    - name: Copy Backup Text Files
      ansible.builtin.template:
        src: "{{ item.key }}"
        dest: "{{ rustify_deploy_path }}/{{ item.value }}"
        mode: 0644
      with_dict:
        "docker-compose.backup.yml.j2": docker-compose.backup.yml

    - name: "Cron: Dump data of rustify Postgres database"
      ansible.builtin.cron:
        name: "dump rustify database"
        minute: "0"
        job: "/usr/bin/docker compose -f {{ rustify_deploy_path }}/docker-compose.backup.yml -p rustify-backup run --rm pg_dump_data"

    - name: "Cron: Dump schema of rustify Postgres database"
      ansible.builtin.cron:
        name: "dump rustify database schema"
        minute: "0"
        job: "/usr/bin/docker compose -f {{ rustify_deploy_path }}/docker-compose.backup.yml -p rustify-backup run --rm pg_dump_schema"

    - name: "Cron: Upload backup with restic"
      ansible.builtin.cron:
        name: "run restic backup"
        day: "*/4"
        hour: "0"
        minute: "30"
        job: "/usr/bin/docker compose -f {{ rustify_deploy_path }}/docker-compose.backup.yml -p rustify-backup run --rm backup"

    - name: "Cron: Cleanup old backups"
      ansible.builtin.cron:
        name: "run restic forget"
        weekday: "6"
        hour: "0"
        minute: "0"
        job: "/usr/bin/docker compose -f {{ rustify_deploy_path }}/docker-compose.backup.yml -p rustify-backup run --rm forget"
